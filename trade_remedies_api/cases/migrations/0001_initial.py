# Generated by Django 2.0.1 on 2018-10-15 14:44

import audit.models
import dirtyfields.dirtyfields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="ArchiveReason",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("key", models.CharField(blank=True, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Case",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("sequence", models.IntegerField(blank=True, null=True, unique=True)),
                ("name", models.CharField(blank=True, max_length=250, null=True)),
                ("initiated_at", models.DateTimeField(blank=True, null=True)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="CaseDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="CaseDocumentType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="CaseStage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("name", models.CharField(max_length=100)),
                ("public_name", models.CharField(blank=True, max_length=150, null=True)),
                ("order", models.SmallIntegerField(default=0)),
                ("locking", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="CaseTimeGate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("ack", models.BooleanField(default=False)),
                ("ack_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="CaseType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("acronym", models.CharField(blank=True, max_length=4, null=True)),
                ("colour", models.CharField(blank=True, max_length=16, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CaseWorkflow",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("workflow", django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="CaseWorkflowState",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("key", models.CharField(max_length=250)),
                ("value", django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="DocumentTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("downloaded", models.BooleanField(default=False)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="ExportSource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("country", django_countries.fields.CountryField(max_length=2)),
            ],
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="HSCode",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("code", models.CharField(max_length=50, unique=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=250, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="Sector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("code", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Submission",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
                ("review", models.NullBooleanField()),
                ("doc_reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("version", models.SmallIntegerField(default=1)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("received_at", models.DateTimeField(blank=True, null=True)),
                ("due_at", models.DateTimeField(blank=True, null=True)),
                ("deficiency_notice", models.TextField(blank=True, null=True)),
                ("deficiency_sent_at", models.DateTimeField(blank=True, null=True)),
                ("archived", models.BooleanField(default=False)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="SubmissionDocument",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("downloads", models.SmallIntegerField(default=0)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("issued", models.BooleanField(default=False)),
                ("issued_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
        migrations.CreateModel(
            name="SubmissionStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("order", models.SmallIntegerField(default=0)),
                ("locking", models.BooleanField(default=False)),
                ("version", models.BooleanField(default=False)),
                ("duration", models.SmallIntegerField(blank=True, null=True)),
                ("default", models.BooleanField(default=False)),
                ("sent", models.BooleanField(default=False)),
                ("received", models.BooleanField(default=False)),
                ("sufficient", models.BooleanField(default=False)),
                ("review", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="SubmissionType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("key", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "direction",
                    models.IntegerField(
                        choices=[
                            (-1, "None"),
                            (0, "Both"),
                            (1, "Public -> TRA"),
                            (2, "Public <- TRA"),
                        ],
                        default=0,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TimeGate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=250)),
                ("spec", django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
            ],
            options={"abstract": False,},
            bases=(
                models.Model,
                dirtyfields.dirtyfields.DirtyFieldsMixin,
                audit.mixins.AuditableMixin,
            ),
        ),
    ]
