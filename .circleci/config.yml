version: 2.1
jobs:
  code_quality:
    docker:
      - image: cimg/python:3.9.5
    steps:
      - checkout
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          name: Install Python deps
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"
      - run:
          name: Run black
          command: |
            . venv/bin/activate
            # black trade_remedies_api --check
      - run:
          name: Run Flake8
          command: |
            . venv/bin/activate
            pflake8 trade_remedies_api --config trade_remedies_api/pyproject.toml
  test:
    docker:
      - image: cimg/python:3.9.5
        environment:
          DATABASE_URL: psql://ubuntu@localhost:5432/trade_remedies
          DJANGO_SETTINGS_MODULE: config.settings.test
          DJANGO_SECRET_KEY: ci_only
          ALLOWED_HOSTS: "*"
          OPENSEARCH_HOST: "opensearch"
          OPENSEARCH_PORT: "9200"
      - image: circleci/postgres:9.6.5-alpine-ram
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: trade_remedies
          POSTGRES_PASSWORD: ""
      - image: opensearchproject/opensearch:1.2.4
        environment:
          - discovery.type=single-node
          - plugins.security.disabled=true
    steps:
      - add_ssh_keys:
            fingerprints:
              - "9f:19:e2:26:c4:aa:6e:4d:98:77:22:09:b9:cf:50:f3"
      - checkout
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
      - run:
          name: Install Python deps
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements/dev.txt
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "requirements/dev.txt" }}
          paths:
            - "venv"
      - run:
          name: Run tests and collect fitness functions
          command: |
            . venv/bin/activate
            pytest --ignore=staticfiles -n 4 -m "not version2"
            coverage json
            codecov
            fitness-functions run . trade_remedies_api
            fitness-functions publish . trade_remedies_api
      - run:
          name: Push the updated READ.ME back to GitHub
          command: |
            . venv/bin/activate
            git config user.email "fitness-functions-machine-user@digital.trade.gov.uk"  # /PS-IGNORE
            git config user.name "FITNESS-FUNCTIONS MACHINE USER"  # /PS-IGNORE
            git add fitness/fitness_metrics.db
            git add fitness/fitness_metrics_graph.png
            git commit -m "[ci skip] AUTOMATED - update fitness functions"
            git push << pipeline.project.git_url >> << pipeline.git.branch >>

workflows:
  version: 2
  run_tests:
    jobs:
      - code_quality
      - test
